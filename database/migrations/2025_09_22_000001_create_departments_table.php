<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

/**
 * Create the departments table.
 * Stores all departments/branches for user organization structure.
 */
return new class extends Migration {
    public function up(): void
    {
        Schema::create('departments', function (Blueprint $table) {
            $table->id();
            $table->string('name')->comment('Department or branch name');
            $table->enum('branch_type', ['ibu_pejabat', 'pejabat_negeri', 'unit'])->index()->comment('Type of branch');
            $table->string('code')->unique()->comment('Unique department code');
            $table->text('description')->nullable()->comment('Optional description for the department');
            $table->boolean('is_active')->default(true)->index()->comment('Whether the department is active');
            // relations (add FK constraints with explicit names after create to avoid automatic name collisions)
            $table->foreignId('head_user_id')->nullable()->index();

            // Audit (FKs added after table creation with explicit names)
            $table->foreignId('created_by')->nullable()->index();
            $table->foreignId('updated_by')->nullable()->index();
            $table->foreignId('deleted_by')->nullable()->index();

            $table->timestampsTz();
            $table->softDeletesTz();

            $table->comment('Stores departments and branch information for the organisation.');
        });

        // Add foreign key constraints with explicit names to avoid autogenerated name collisions
        Schema::table('departments', function (Blueprint $table) {
            $table->foreign('head_user_id', 'departments_head_user_id_fk')
                ->references('id')->on('users')->onDelete('set null');

            $table->foreign('created_by', 'departments_created_by_fk')
                ->references('id')->on('users')->onDelete('set null');

            $table->foreign('updated_by', 'departments_updated_by_fk')
                ->references('id')->on('users')->onDelete('set null');

            $table->foreign('deleted_by', 'departments_deleted_by_fk')
                ->references('id')->on('users')->onDelete('set null');
        });
    }

    public function down(): void
    {
        if (Schema::hasTable('departments')) {
            Schema::table('departments', function (Blueprint $table) {
                foreach (['departments_head_user_id_fk', 'departments_created_by_fk', 'departments_updated_by_fk', 'departments_deleted_by_fk'] as $fk) {
                    try {
                        $table->dropForeign($fk);
                    } catch (\Throwable $e) {
                        // ignore
                    }
                }
            });

            Schema::dropIfExists('departments');
        }
    }
};
